// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SliderClusterProtocol.proto

package org.apache.slider.api.proto;

public final class SliderClusterAPI {
  private SliderClusterAPI() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf service {@code org.apache.slider.api.SliderClusterProtocolPB}
   *
   * <pre>
   **
   * Protocol used from between Slider Client and AM
   * </pre>
   */
  public static abstract class SliderClusterProtocolPB
      implements com.google.protobuf.Service {
    protected SliderClusterProtocolPB() {}

    public interface Interface {
      /**
       * <code>rpc stopCluster(.org.apache.slider.api.StopClusterRequestProto) returns (.org.apache.slider.api.StopClusterResponseProto);</code>
       */
      public abstract void stopCluster(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.StopClusterRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.StopClusterResponseProto> done);

      /**
       * <code>rpc upgradeContainers(.org.apache.slider.api.UpgradeContainersRequestProto) returns (.org.apache.slider.api.UpgradeContainersResponseProto);</code>
       *
       * <pre>
       **
       * Upgrade containers 
       * </pre>
       */
      public abstract void upgradeContainers(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.UpgradeContainersRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.UpgradeContainersResponseProto> done);

      /**
       * <code>rpc flexCluster(.org.apache.slider.api.FlexClusterRequestProto) returns (.org.apache.slider.api.FlexClusterResponseProto);</code>
       *
       * <pre>
       **
       * Flex the cluster. 
       * </pre>
       */
      public abstract void flexCluster(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.FlexClusterRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.FlexClusterResponseProto> done);

      /**
       * <code>rpc getJSONClusterStatus(.org.apache.slider.api.GetJSONClusterStatusRequestProto) returns (.org.apache.slider.api.GetJSONClusterStatusResponseProto);</code>
       *
       * <pre>
       **
       * Get the current cluster status
       * </pre>
       */
      public abstract void getJSONClusterStatus(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetJSONClusterStatusRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetJSONClusterStatusResponseProto> done);

      /**
       * <code>rpc getInstanceDefinition(.org.apache.slider.api.GetInstanceDefinitionRequestProto) returns (.org.apache.slider.api.GetInstanceDefinitionResponseProto);</code>
       *
       * <pre>
       **
       * Get the instance definition
       * </pre>
       */
      public abstract void getInstanceDefinition(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetInstanceDefinitionRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetInstanceDefinitionResponseProto> done);

      /**
       * <code>rpc listNodeUUIDsByRole(.org.apache.slider.api.ListNodeUUIDsByRoleRequestProto) returns (.org.apache.slider.api.ListNodeUUIDsByRoleResponseProto);</code>
       *
       * <pre>
       **
       * List all running nodes in a role
       * </pre>
       */
      public abstract void listNodeUUIDsByRole(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleResponseProto> done);

      /**
       * <code>rpc getNode(.org.apache.slider.api.GetNodeRequestProto) returns (.org.apache.slider.api.GetNodeResponseProto);</code>
       *
       * <pre>
       **
       * Get the details on a node
       * </pre>
       */
      public abstract void getNode(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetNodeRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetNodeResponseProto> done);

      /**
       * <code>rpc getClusterNodes(.org.apache.slider.api.GetClusterNodesRequestProto) returns (.org.apache.slider.api.GetClusterNodesResponseProto);</code>
       *
       * <pre>
       **
       * Get the 
       * details on a list of nodes.
       * Unknown nodes are not returned
       * &lt;i&gt;Important: the order of the results are undefined&lt;/i&gt;
       * </pre>
       */
      public abstract void getClusterNodes(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetClusterNodesRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetClusterNodesResponseProto> done);

      /**
       * <code>rpc echo(.org.apache.slider.api.EchoRequestProto) returns (.org.apache.slider.api.EchoResponseProto);</code>
       *
       * <pre>
       **
       * echo some text
       * </pre>
       */
      public abstract void echo(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EchoRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.EchoResponseProto> done);

      /**
       * <code>rpc killContainer(.org.apache.slider.api.KillContainerRequestProto) returns (.org.apache.slider.api.KillContainerResponseProto);</code>
       *
       * <pre>
       **
       * kill a container
       * </pre>
       */
      public abstract void killContainer(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.KillContainerRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.KillContainerResponseProto> done);

      /**
       * <code>rpc amSuicide(.org.apache.slider.api.AMSuicideRequestProto) returns (.org.apache.slider.api.AMSuicideResponseProto);</code>
       *
       * <pre>
       **
       * kill the AM
       * </pre>
       */
      public abstract void amSuicide(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.AMSuicideRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.AMSuicideResponseProto> done);

      /**
       * <code>rpc getLivenessInformation(.org.apache.slider.api.GetApplicationLivenessRequestProto) returns (.org.apache.slider.api.ApplicationLivenessInformationProto);</code>
       */
      public abstract void getLivenessInformation(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetApplicationLivenessRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.ApplicationLivenessInformationProto> done);

      /**
       * <code>rpc getLiveContainers(.org.apache.slider.api.GetLiveContainersRequestProto) returns (.org.apache.slider.api.GetLiveContainersResponseProto);</code>
       */
      public abstract void getLiveContainers(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveContainersRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetLiveContainersResponseProto> done);

      /**
       * <code>rpc getLiveContainer(.org.apache.slider.api.GetLiveContainerRequestProto) returns (.org.apache.slider.api.ContainerInformationProto);</code>
       */
      public abstract void getLiveContainer(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveContainerRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.ContainerInformationProto> done);

      /**
       * <code>rpc getLiveComponents(.org.apache.slider.api.GetLiveComponentsRequestProto) returns (.org.apache.slider.api.GetLiveComponentsResponseProto);</code>
       */
      public abstract void getLiveComponents(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveComponentsRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetLiveComponentsResponseProto> done);

      /**
       * <code>rpc getLiveComponent(.org.apache.slider.api.GetLiveComponentRequestProto) returns (.org.apache.slider.api.ComponentInformationProto);</code>
       */
      public abstract void getLiveComponent(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveComponentRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.ComponentInformationProto> done);

      /**
       * <code>rpc getLiveNodes(.org.apache.slider.api.GetLiveNodesRequestProto) returns (.org.apache.slider.api.GetLiveNodesResponseProto);</code>
       */
      public abstract void getLiveNodes(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveNodesRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetLiveNodesResponseProto> done);

      /**
       * <code>rpc getLiveNode(.org.apache.slider.api.GetLiveNodeRequestProto) returns (.org.apache.slider.api.NodeInformationProto);</code>
       */
      public abstract void getLiveNode(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveNodeRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.NodeInformationProto> done);

      /**
       * <code>rpc getModelDesired(.org.apache.slider.api.EmptyPayloadProto) returns (.org.apache.slider.api.WrappedJsonProto);</code>
       *
       * <pre>
       * AggregateConf getModelDesired()
       * </pre>
       */
      public abstract void getModelDesired(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done);

      /**
       * <code>rpc getModelDesiredAppconf(.org.apache.slider.api.EmptyPayloadProto) returns (.org.apache.slider.api.WrappedJsonProto);</code>
       *
       * <pre>
       * ConfTree getModelDesiredAppconf
       * </pre>
       */
      public abstract void getModelDesiredAppconf(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done);

      /**
       * <code>rpc getModelDesiredResources(.org.apache.slider.api.EmptyPayloadProto) returns (.org.apache.slider.api.WrappedJsonProto);</code>
       *
       * <pre>
       * ConfTree getModelDesiredResources
       * </pre>
       */
      public abstract void getModelDesiredResources(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done);

      /**
       * <code>rpc getModelResolved(.org.apache.slider.api.EmptyPayloadProto) returns (.org.apache.slider.api.WrappedJsonProto);</code>
       *
       * <pre>
       * AggregateConf getModelResolved()
       * </pre>
       */
      public abstract void getModelResolved(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done);

      /**
       * <code>rpc getModelResolvedAppconf(.org.apache.slider.api.EmptyPayloadProto) returns (.org.apache.slider.api.WrappedJsonProto);</code>
       *
       * <pre>
       * ConfTree getModelResolvedAppconf
       * </pre>
       */
      public abstract void getModelResolvedAppconf(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done);

      /**
       * <code>rpc getModelResolvedResources(.org.apache.slider.api.EmptyPayloadProto) returns (.org.apache.slider.api.WrappedJsonProto);</code>
       *
       * <pre>
       * ConfTree getModelResolvedResources
       * </pre>
       */
      public abstract void getModelResolvedResources(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done);

      /**
       * <code>rpc getLiveResources(.org.apache.slider.api.EmptyPayloadProto) returns (.org.apache.slider.api.WrappedJsonProto);</code>
       *
       * <pre>
       * ConfTree getLiveResources
       * </pre>
       */
      public abstract void getLiveResources(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done);

      /**
       * <code>rpc getClientCertificateStore(.org.apache.slider.api.GetCertificateStoreRequestProto) returns (.org.apache.slider.api.GetCertificateStoreResponseProto);</code>
       */
      public abstract void getClientCertificateStore(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetCertificateStoreRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetCertificateStoreResponseProto> done);

    }

    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new SliderClusterProtocolPB() {
        @java.lang.Override
        public  void stopCluster(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.StopClusterRequestProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.StopClusterResponseProto> done) {
          impl.stopCluster(controller, request, done);
        }

        @java.lang.Override
        public  void upgradeContainers(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.UpgradeContainersRequestProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.UpgradeContainersResponseProto> done) {
          impl.upgradeContainers(controller, request, done);
        }

        @java.lang.Override
        public  void flexCluster(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.FlexClusterRequestProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.FlexClusterResponseProto> done) {
          impl.flexCluster(controller, request, done);
        }

        @java.lang.Override
        public  void getJSONClusterStatus(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.GetJSONClusterStatusRequestProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetJSONClusterStatusResponseProto> done) {
          impl.getJSONClusterStatus(controller, request, done);
        }

        @java.lang.Override
        public  void getInstanceDefinition(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.GetInstanceDefinitionRequestProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetInstanceDefinitionResponseProto> done) {
          impl.getInstanceDefinition(controller, request, done);
        }

        @java.lang.Override
        public  void listNodeUUIDsByRole(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleRequestProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleResponseProto> done) {
          impl.listNodeUUIDsByRole(controller, request, done);
        }

        @java.lang.Override
        public  void getNode(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.GetNodeRequestProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetNodeResponseProto> done) {
          impl.getNode(controller, request, done);
        }

        @java.lang.Override
        public  void getClusterNodes(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.GetClusterNodesRequestProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetClusterNodesResponseProto> done) {
          impl.getClusterNodes(controller, request, done);
        }

        @java.lang.Override
        public  void echo(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.EchoRequestProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.EchoResponseProto> done) {
          impl.echo(controller, request, done);
        }

        @java.lang.Override
        public  void killContainer(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.KillContainerRequestProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.KillContainerResponseProto> done) {
          impl.killContainer(controller, request, done);
        }

        @java.lang.Override
        public  void amSuicide(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.AMSuicideRequestProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.AMSuicideResponseProto> done) {
          impl.amSuicide(controller, request, done);
        }

        @java.lang.Override
        public  void getLivenessInformation(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.GetApplicationLivenessRequestProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.ApplicationLivenessInformationProto> done) {
          impl.getLivenessInformation(controller, request, done);
        }

        @java.lang.Override
        public  void getLiveContainers(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.GetLiveContainersRequestProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetLiveContainersResponseProto> done) {
          impl.getLiveContainers(controller, request, done);
        }

        @java.lang.Override
        public  void getLiveContainer(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.GetLiveContainerRequestProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.ContainerInformationProto> done) {
          impl.getLiveContainer(controller, request, done);
        }

        @java.lang.Override
        public  void getLiveComponents(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.GetLiveComponentsRequestProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetLiveComponentsResponseProto> done) {
          impl.getLiveComponents(controller, request, done);
        }

        @java.lang.Override
        public  void getLiveComponent(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.GetLiveComponentRequestProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.ComponentInformationProto> done) {
          impl.getLiveComponent(controller, request, done);
        }

        @java.lang.Override
        public  void getLiveNodes(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.GetLiveNodesRequestProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetLiveNodesResponseProto> done) {
          impl.getLiveNodes(controller, request, done);
        }

        @java.lang.Override
        public  void getLiveNode(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.GetLiveNodeRequestProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.NodeInformationProto> done) {
          impl.getLiveNode(controller, request, done);
        }

        @java.lang.Override
        public  void getModelDesired(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done) {
          impl.getModelDesired(controller, request, done);
        }

        @java.lang.Override
        public  void getModelDesiredAppconf(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done) {
          impl.getModelDesiredAppconf(controller, request, done);
        }

        @java.lang.Override
        public  void getModelDesiredResources(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done) {
          impl.getModelDesiredResources(controller, request, done);
        }

        @java.lang.Override
        public  void getModelResolved(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done) {
          impl.getModelResolved(controller, request, done);
        }

        @java.lang.Override
        public  void getModelResolvedAppconf(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done) {
          impl.getModelResolvedAppconf(controller, request, done);
        }

        @java.lang.Override
        public  void getModelResolvedResources(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done) {
          impl.getModelResolvedResources(controller, request, done);
        }

        @java.lang.Override
        public  void getLiveResources(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done) {
          impl.getLiveResources(controller, request, done);
        }

        @java.lang.Override
        public  void getClientCertificateStore(
            com.google.protobuf.RpcController controller,
            org.apache.slider.api.proto.Messages.GetCertificateStoreRequestProto request,
            com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetCertificateStoreResponseProto> done) {
          impl.getClientCertificateStore(controller, request, done);
        }

      };
    }

    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }

        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.stopCluster(controller, (org.apache.slider.api.proto.Messages.StopClusterRequestProto)request);
            case 1:
              return impl.upgradeContainers(controller, (org.apache.slider.api.proto.Messages.UpgradeContainersRequestProto)request);
            case 2:
              return impl.flexCluster(controller, (org.apache.slider.api.proto.Messages.FlexClusterRequestProto)request);
            case 3:
              return impl.getJSONClusterStatus(controller, (org.apache.slider.api.proto.Messages.GetJSONClusterStatusRequestProto)request);
            case 4:
              return impl.getInstanceDefinition(controller, (org.apache.slider.api.proto.Messages.GetInstanceDefinitionRequestProto)request);
            case 5:
              return impl.listNodeUUIDsByRole(controller, (org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleRequestProto)request);
            case 6:
              return impl.getNode(controller, (org.apache.slider.api.proto.Messages.GetNodeRequestProto)request);
            case 7:
              return impl.getClusterNodes(controller, (org.apache.slider.api.proto.Messages.GetClusterNodesRequestProto)request);
            case 8:
              return impl.echo(controller, (org.apache.slider.api.proto.Messages.EchoRequestProto)request);
            case 9:
              return impl.killContainer(controller, (org.apache.slider.api.proto.Messages.KillContainerRequestProto)request);
            case 10:
              return impl.amSuicide(controller, (org.apache.slider.api.proto.Messages.AMSuicideRequestProto)request);
            case 11:
              return impl.getLivenessInformation(controller, (org.apache.slider.api.proto.Messages.GetApplicationLivenessRequestProto)request);
            case 12:
              return impl.getLiveContainers(controller, (org.apache.slider.api.proto.Messages.GetLiveContainersRequestProto)request);
            case 13:
              return impl.getLiveContainer(controller, (org.apache.slider.api.proto.Messages.GetLiveContainerRequestProto)request);
            case 14:
              return impl.getLiveComponents(controller, (org.apache.slider.api.proto.Messages.GetLiveComponentsRequestProto)request);
            case 15:
              return impl.getLiveComponent(controller, (org.apache.slider.api.proto.Messages.GetLiveComponentRequestProto)request);
            case 16:
              return impl.getLiveNodes(controller, (org.apache.slider.api.proto.Messages.GetLiveNodesRequestProto)request);
            case 17:
              return impl.getLiveNode(controller, (org.apache.slider.api.proto.Messages.GetLiveNodeRequestProto)request);
            case 18:
              return impl.getModelDesired(controller, (org.apache.slider.api.proto.Messages.EmptyPayloadProto)request);
            case 19:
              return impl.getModelDesiredAppconf(controller, (org.apache.slider.api.proto.Messages.EmptyPayloadProto)request);
            case 20:
              return impl.getModelDesiredResources(controller, (org.apache.slider.api.proto.Messages.EmptyPayloadProto)request);
            case 21:
              return impl.getModelResolved(controller, (org.apache.slider.api.proto.Messages.EmptyPayloadProto)request);
            case 22:
              return impl.getModelResolvedAppconf(controller, (org.apache.slider.api.proto.Messages.EmptyPayloadProto)request);
            case 23:
              return impl.getModelResolvedResources(controller, (org.apache.slider.api.proto.Messages.EmptyPayloadProto)request);
            case 24:
              return impl.getLiveResources(controller, (org.apache.slider.api.proto.Messages.EmptyPayloadProto)request);
            case 25:
              return impl.getClientCertificateStore(controller, (org.apache.slider.api.proto.Messages.GetCertificateStoreRequestProto)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.apache.slider.api.proto.Messages.StopClusterRequestProto.getDefaultInstance();
            case 1:
              return org.apache.slider.api.proto.Messages.UpgradeContainersRequestProto.getDefaultInstance();
            case 2:
              return org.apache.slider.api.proto.Messages.FlexClusterRequestProto.getDefaultInstance();
            case 3:
              return org.apache.slider.api.proto.Messages.GetJSONClusterStatusRequestProto.getDefaultInstance();
            case 4:
              return org.apache.slider.api.proto.Messages.GetInstanceDefinitionRequestProto.getDefaultInstance();
            case 5:
              return org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleRequestProto.getDefaultInstance();
            case 6:
              return org.apache.slider.api.proto.Messages.GetNodeRequestProto.getDefaultInstance();
            case 7:
              return org.apache.slider.api.proto.Messages.GetClusterNodesRequestProto.getDefaultInstance();
            case 8:
              return org.apache.slider.api.proto.Messages.EchoRequestProto.getDefaultInstance();
            case 9:
              return org.apache.slider.api.proto.Messages.KillContainerRequestProto.getDefaultInstance();
            case 10:
              return org.apache.slider.api.proto.Messages.AMSuicideRequestProto.getDefaultInstance();
            case 11:
              return org.apache.slider.api.proto.Messages.GetApplicationLivenessRequestProto.getDefaultInstance();
            case 12:
              return org.apache.slider.api.proto.Messages.GetLiveContainersRequestProto.getDefaultInstance();
            case 13:
              return org.apache.slider.api.proto.Messages.GetLiveContainerRequestProto.getDefaultInstance();
            case 14:
              return org.apache.slider.api.proto.Messages.GetLiveComponentsRequestProto.getDefaultInstance();
            case 15:
              return org.apache.slider.api.proto.Messages.GetLiveComponentRequestProto.getDefaultInstance();
            case 16:
              return org.apache.slider.api.proto.Messages.GetLiveNodesRequestProto.getDefaultInstance();
            case 17:
              return org.apache.slider.api.proto.Messages.GetLiveNodeRequestProto.getDefaultInstance();
            case 18:
              return org.apache.slider.api.proto.Messages.EmptyPayloadProto.getDefaultInstance();
            case 19:
              return org.apache.slider.api.proto.Messages.EmptyPayloadProto.getDefaultInstance();
            case 20:
              return org.apache.slider.api.proto.Messages.EmptyPayloadProto.getDefaultInstance();
            case 21:
              return org.apache.slider.api.proto.Messages.EmptyPayloadProto.getDefaultInstance();
            case 22:
              return org.apache.slider.api.proto.Messages.EmptyPayloadProto.getDefaultInstance();
            case 23:
              return org.apache.slider.api.proto.Messages.EmptyPayloadProto.getDefaultInstance();
            case 24:
              return org.apache.slider.api.proto.Messages.EmptyPayloadProto.getDefaultInstance();
            case 25:
              return org.apache.slider.api.proto.Messages.GetCertificateStoreRequestProto.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.apache.slider.api.proto.Messages.StopClusterResponseProto.getDefaultInstance();
            case 1:
              return org.apache.slider.api.proto.Messages.UpgradeContainersResponseProto.getDefaultInstance();
            case 2:
              return org.apache.slider.api.proto.Messages.FlexClusterResponseProto.getDefaultInstance();
            case 3:
              return org.apache.slider.api.proto.Messages.GetJSONClusterStatusResponseProto.getDefaultInstance();
            case 4:
              return org.apache.slider.api.proto.Messages.GetInstanceDefinitionResponseProto.getDefaultInstance();
            case 5:
              return org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleResponseProto.getDefaultInstance();
            case 6:
              return org.apache.slider.api.proto.Messages.GetNodeResponseProto.getDefaultInstance();
            case 7:
              return org.apache.slider.api.proto.Messages.GetClusterNodesResponseProto.getDefaultInstance();
            case 8:
              return org.apache.slider.api.proto.Messages.EchoResponseProto.getDefaultInstance();
            case 9:
              return org.apache.slider.api.proto.Messages.KillContainerResponseProto.getDefaultInstance();
            case 10:
              return org.apache.slider.api.proto.Messages.AMSuicideResponseProto.getDefaultInstance();
            case 11:
              return org.apache.slider.api.proto.Messages.ApplicationLivenessInformationProto.getDefaultInstance();
            case 12:
              return org.apache.slider.api.proto.Messages.GetLiveContainersResponseProto.getDefaultInstance();
            case 13:
              return org.apache.slider.api.proto.Messages.ContainerInformationProto.getDefaultInstance();
            case 14:
              return org.apache.slider.api.proto.Messages.GetLiveComponentsResponseProto.getDefaultInstance();
            case 15:
              return org.apache.slider.api.proto.Messages.ComponentInformationProto.getDefaultInstance();
            case 16:
              return org.apache.slider.api.proto.Messages.GetLiveNodesResponseProto.getDefaultInstance();
            case 17:
              return org.apache.slider.api.proto.Messages.NodeInformationProto.getDefaultInstance();
            case 18:
              return org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance();
            case 19:
              return org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance();
            case 20:
              return org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance();
            case 21:
              return org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance();
            case 22:
              return org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance();
            case 23:
              return org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance();
            case 24:
              return org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance();
            case 25:
              return org.apache.slider.api.proto.Messages.GetCertificateStoreResponseProto.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

      };
    }

    /**
     * <code>rpc stopCluster(.org.apache.slider.api.StopClusterRequestProto) returns (.org.apache.slider.api.StopClusterResponseProto);</code>
     */
    public abstract void stopCluster(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.StopClusterRequestProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.StopClusterResponseProto> done);

    /**
     * <code>rpc upgradeContainers(.org.apache.slider.api.UpgradeContainersRequestProto) returns (.org.apache.slider.api.UpgradeContainersResponseProto);</code>
     *
     * <pre>
     **
     * Upgrade containers 
     * </pre>
     */
    public abstract void upgradeContainers(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.UpgradeContainersRequestProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.UpgradeContainersResponseProto> done);

    /**
     * <code>rpc flexCluster(.org.apache.slider.api.FlexClusterRequestProto) returns (.org.apache.slider.api.FlexClusterResponseProto);</code>
     *
     * <pre>
     **
     * Flex the cluster. 
     * </pre>
     */
    public abstract void flexCluster(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.FlexClusterRequestProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.FlexClusterResponseProto> done);

    /**
     * <code>rpc getJSONClusterStatus(.org.apache.slider.api.GetJSONClusterStatusRequestProto) returns (.org.apache.slider.api.GetJSONClusterStatusResponseProto);</code>
     *
     * <pre>
     **
     * Get the current cluster status
     * </pre>
     */
    public abstract void getJSONClusterStatus(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.GetJSONClusterStatusRequestProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetJSONClusterStatusResponseProto> done);

    /**
     * <code>rpc getInstanceDefinition(.org.apache.slider.api.GetInstanceDefinitionRequestProto) returns (.org.apache.slider.api.GetInstanceDefinitionResponseProto);</code>
     *
     * <pre>
     **
     * Get the instance definition
     * </pre>
     */
    public abstract void getInstanceDefinition(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.GetInstanceDefinitionRequestProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetInstanceDefinitionResponseProto> done);

    /**
     * <code>rpc listNodeUUIDsByRole(.org.apache.slider.api.ListNodeUUIDsByRoleRequestProto) returns (.org.apache.slider.api.ListNodeUUIDsByRoleResponseProto);</code>
     *
     * <pre>
     **
     * List all running nodes in a role
     * </pre>
     */
    public abstract void listNodeUUIDsByRole(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleRequestProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleResponseProto> done);

    /**
     * <code>rpc getNode(.org.apache.slider.api.GetNodeRequestProto) returns (.org.apache.slider.api.GetNodeResponseProto);</code>
     *
     * <pre>
     **
     * Get the details on a node
     * </pre>
     */
    public abstract void getNode(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.GetNodeRequestProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetNodeResponseProto> done);

    /**
     * <code>rpc getClusterNodes(.org.apache.slider.api.GetClusterNodesRequestProto) returns (.org.apache.slider.api.GetClusterNodesResponseProto);</code>
     *
     * <pre>
     **
     * Get the 
     * details on a list of nodes.
     * Unknown nodes are not returned
     * &lt;i&gt;Important: the order of the results are undefined&lt;/i&gt;
     * </pre>
     */
    public abstract void getClusterNodes(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.GetClusterNodesRequestProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetClusterNodesResponseProto> done);

    /**
     * <code>rpc echo(.org.apache.slider.api.EchoRequestProto) returns (.org.apache.slider.api.EchoResponseProto);</code>
     *
     * <pre>
     **
     * echo some text
     * </pre>
     */
    public abstract void echo(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.EchoRequestProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.EchoResponseProto> done);

    /**
     * <code>rpc killContainer(.org.apache.slider.api.KillContainerRequestProto) returns (.org.apache.slider.api.KillContainerResponseProto);</code>
     *
     * <pre>
     **
     * kill a container
     * </pre>
     */
    public abstract void killContainer(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.KillContainerRequestProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.KillContainerResponseProto> done);

    /**
     * <code>rpc amSuicide(.org.apache.slider.api.AMSuicideRequestProto) returns (.org.apache.slider.api.AMSuicideResponseProto);</code>
     *
     * <pre>
     **
     * kill the AM
     * </pre>
     */
    public abstract void amSuicide(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.AMSuicideRequestProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.AMSuicideResponseProto> done);

    /**
     * <code>rpc getLivenessInformation(.org.apache.slider.api.GetApplicationLivenessRequestProto) returns (.org.apache.slider.api.ApplicationLivenessInformationProto);</code>
     */
    public abstract void getLivenessInformation(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.GetApplicationLivenessRequestProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.ApplicationLivenessInformationProto> done);

    /**
     * <code>rpc getLiveContainers(.org.apache.slider.api.GetLiveContainersRequestProto) returns (.org.apache.slider.api.GetLiveContainersResponseProto);</code>
     */
    public abstract void getLiveContainers(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.GetLiveContainersRequestProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetLiveContainersResponseProto> done);

    /**
     * <code>rpc getLiveContainer(.org.apache.slider.api.GetLiveContainerRequestProto) returns (.org.apache.slider.api.ContainerInformationProto);</code>
     */
    public abstract void getLiveContainer(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.GetLiveContainerRequestProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.ContainerInformationProto> done);

    /**
     * <code>rpc getLiveComponents(.org.apache.slider.api.GetLiveComponentsRequestProto) returns (.org.apache.slider.api.GetLiveComponentsResponseProto);</code>
     */
    public abstract void getLiveComponents(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.GetLiveComponentsRequestProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetLiveComponentsResponseProto> done);

    /**
     * <code>rpc getLiveComponent(.org.apache.slider.api.GetLiveComponentRequestProto) returns (.org.apache.slider.api.ComponentInformationProto);</code>
     */
    public abstract void getLiveComponent(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.GetLiveComponentRequestProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.ComponentInformationProto> done);

    /**
     * <code>rpc getLiveNodes(.org.apache.slider.api.GetLiveNodesRequestProto) returns (.org.apache.slider.api.GetLiveNodesResponseProto);</code>
     */
    public abstract void getLiveNodes(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.GetLiveNodesRequestProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetLiveNodesResponseProto> done);

    /**
     * <code>rpc getLiveNode(.org.apache.slider.api.GetLiveNodeRequestProto) returns (.org.apache.slider.api.NodeInformationProto);</code>
     */
    public abstract void getLiveNode(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.GetLiveNodeRequestProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.NodeInformationProto> done);

    /**
     * <code>rpc getModelDesired(.org.apache.slider.api.EmptyPayloadProto) returns (.org.apache.slider.api.WrappedJsonProto);</code>
     *
     * <pre>
     * AggregateConf getModelDesired()
     * </pre>
     */
    public abstract void getModelDesired(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done);

    /**
     * <code>rpc getModelDesiredAppconf(.org.apache.slider.api.EmptyPayloadProto) returns (.org.apache.slider.api.WrappedJsonProto);</code>
     *
     * <pre>
     * ConfTree getModelDesiredAppconf
     * </pre>
     */
    public abstract void getModelDesiredAppconf(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done);

    /**
     * <code>rpc getModelDesiredResources(.org.apache.slider.api.EmptyPayloadProto) returns (.org.apache.slider.api.WrappedJsonProto);</code>
     *
     * <pre>
     * ConfTree getModelDesiredResources
     * </pre>
     */
    public abstract void getModelDesiredResources(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done);

    /**
     * <code>rpc getModelResolved(.org.apache.slider.api.EmptyPayloadProto) returns (.org.apache.slider.api.WrappedJsonProto);</code>
     *
     * <pre>
     * AggregateConf getModelResolved()
     * </pre>
     */
    public abstract void getModelResolved(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done);

    /**
     * <code>rpc getModelResolvedAppconf(.org.apache.slider.api.EmptyPayloadProto) returns (.org.apache.slider.api.WrappedJsonProto);</code>
     *
     * <pre>
     * ConfTree getModelResolvedAppconf
     * </pre>
     */
    public abstract void getModelResolvedAppconf(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done);

    /**
     * <code>rpc getModelResolvedResources(.org.apache.slider.api.EmptyPayloadProto) returns (.org.apache.slider.api.WrappedJsonProto);</code>
     *
     * <pre>
     * ConfTree getModelResolvedResources
     * </pre>
     */
    public abstract void getModelResolvedResources(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done);

    /**
     * <code>rpc getLiveResources(.org.apache.slider.api.EmptyPayloadProto) returns (.org.apache.slider.api.WrappedJsonProto);</code>
     *
     * <pre>
     * ConfTree getLiveResources
     * </pre>
     */
    public abstract void getLiveResources(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done);

    /**
     * <code>rpc getClientCertificateStore(.org.apache.slider.api.GetCertificateStoreRequestProto) returns (.org.apache.slider.api.GetCertificateStoreResponseProto);</code>
     */
    public abstract void getClientCertificateStore(
        com.google.protobuf.RpcController controller,
        org.apache.slider.api.proto.Messages.GetCertificateStoreRequestProto request,
        com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetCertificateStoreResponseProto> done);

    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.apache.slider.api.proto.SliderClusterAPI.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.stopCluster(controller, (org.apache.slider.api.proto.Messages.StopClusterRequestProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.StopClusterResponseProto>specializeCallback(
              done));
          return;
        case 1:
          this.upgradeContainers(controller, (org.apache.slider.api.proto.Messages.UpgradeContainersRequestProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.UpgradeContainersResponseProto>specializeCallback(
              done));
          return;
        case 2:
          this.flexCluster(controller, (org.apache.slider.api.proto.Messages.FlexClusterRequestProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.FlexClusterResponseProto>specializeCallback(
              done));
          return;
        case 3:
          this.getJSONClusterStatus(controller, (org.apache.slider.api.proto.Messages.GetJSONClusterStatusRequestProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.GetJSONClusterStatusResponseProto>specializeCallback(
              done));
          return;
        case 4:
          this.getInstanceDefinition(controller, (org.apache.slider.api.proto.Messages.GetInstanceDefinitionRequestProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.GetInstanceDefinitionResponseProto>specializeCallback(
              done));
          return;
        case 5:
          this.listNodeUUIDsByRole(controller, (org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleRequestProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleResponseProto>specializeCallback(
              done));
          return;
        case 6:
          this.getNode(controller, (org.apache.slider.api.proto.Messages.GetNodeRequestProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.GetNodeResponseProto>specializeCallback(
              done));
          return;
        case 7:
          this.getClusterNodes(controller, (org.apache.slider.api.proto.Messages.GetClusterNodesRequestProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.GetClusterNodesResponseProto>specializeCallback(
              done));
          return;
        case 8:
          this.echo(controller, (org.apache.slider.api.proto.Messages.EchoRequestProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.EchoResponseProto>specializeCallback(
              done));
          return;
        case 9:
          this.killContainer(controller, (org.apache.slider.api.proto.Messages.KillContainerRequestProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.KillContainerResponseProto>specializeCallback(
              done));
          return;
        case 10:
          this.amSuicide(controller, (org.apache.slider.api.proto.Messages.AMSuicideRequestProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.AMSuicideResponseProto>specializeCallback(
              done));
          return;
        case 11:
          this.getLivenessInformation(controller, (org.apache.slider.api.proto.Messages.GetApplicationLivenessRequestProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.ApplicationLivenessInformationProto>specializeCallback(
              done));
          return;
        case 12:
          this.getLiveContainers(controller, (org.apache.slider.api.proto.Messages.GetLiveContainersRequestProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.GetLiveContainersResponseProto>specializeCallback(
              done));
          return;
        case 13:
          this.getLiveContainer(controller, (org.apache.slider.api.proto.Messages.GetLiveContainerRequestProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.ContainerInformationProto>specializeCallback(
              done));
          return;
        case 14:
          this.getLiveComponents(controller, (org.apache.slider.api.proto.Messages.GetLiveComponentsRequestProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.GetLiveComponentsResponseProto>specializeCallback(
              done));
          return;
        case 15:
          this.getLiveComponent(controller, (org.apache.slider.api.proto.Messages.GetLiveComponentRequestProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.ComponentInformationProto>specializeCallback(
              done));
          return;
        case 16:
          this.getLiveNodes(controller, (org.apache.slider.api.proto.Messages.GetLiveNodesRequestProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.GetLiveNodesResponseProto>specializeCallback(
              done));
          return;
        case 17:
          this.getLiveNode(controller, (org.apache.slider.api.proto.Messages.GetLiveNodeRequestProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.NodeInformationProto>specializeCallback(
              done));
          return;
        case 18:
          this.getModelDesired(controller, (org.apache.slider.api.proto.Messages.EmptyPayloadProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.WrappedJsonProto>specializeCallback(
              done));
          return;
        case 19:
          this.getModelDesiredAppconf(controller, (org.apache.slider.api.proto.Messages.EmptyPayloadProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.WrappedJsonProto>specializeCallback(
              done));
          return;
        case 20:
          this.getModelDesiredResources(controller, (org.apache.slider.api.proto.Messages.EmptyPayloadProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.WrappedJsonProto>specializeCallback(
              done));
          return;
        case 21:
          this.getModelResolved(controller, (org.apache.slider.api.proto.Messages.EmptyPayloadProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.WrappedJsonProto>specializeCallback(
              done));
          return;
        case 22:
          this.getModelResolvedAppconf(controller, (org.apache.slider.api.proto.Messages.EmptyPayloadProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.WrappedJsonProto>specializeCallback(
              done));
          return;
        case 23:
          this.getModelResolvedResources(controller, (org.apache.slider.api.proto.Messages.EmptyPayloadProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.WrappedJsonProto>specializeCallback(
              done));
          return;
        case 24:
          this.getLiveResources(controller, (org.apache.slider.api.proto.Messages.EmptyPayloadProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.WrappedJsonProto>specializeCallback(
              done));
          return;
        case 25:
          this.getClientCertificateStore(controller, (org.apache.slider.api.proto.Messages.GetCertificateStoreRequestProto)request,
            com.google.protobuf.RpcUtil.<org.apache.slider.api.proto.Messages.GetCertificateStoreResponseProto>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.apache.slider.api.proto.Messages.StopClusterRequestProto.getDefaultInstance();
        case 1:
          return org.apache.slider.api.proto.Messages.UpgradeContainersRequestProto.getDefaultInstance();
        case 2:
          return org.apache.slider.api.proto.Messages.FlexClusterRequestProto.getDefaultInstance();
        case 3:
          return org.apache.slider.api.proto.Messages.GetJSONClusterStatusRequestProto.getDefaultInstance();
        case 4:
          return org.apache.slider.api.proto.Messages.GetInstanceDefinitionRequestProto.getDefaultInstance();
        case 5:
          return org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleRequestProto.getDefaultInstance();
        case 6:
          return org.apache.slider.api.proto.Messages.GetNodeRequestProto.getDefaultInstance();
        case 7:
          return org.apache.slider.api.proto.Messages.GetClusterNodesRequestProto.getDefaultInstance();
        case 8:
          return org.apache.slider.api.proto.Messages.EchoRequestProto.getDefaultInstance();
        case 9:
          return org.apache.slider.api.proto.Messages.KillContainerRequestProto.getDefaultInstance();
        case 10:
          return org.apache.slider.api.proto.Messages.AMSuicideRequestProto.getDefaultInstance();
        case 11:
          return org.apache.slider.api.proto.Messages.GetApplicationLivenessRequestProto.getDefaultInstance();
        case 12:
          return org.apache.slider.api.proto.Messages.GetLiveContainersRequestProto.getDefaultInstance();
        case 13:
          return org.apache.slider.api.proto.Messages.GetLiveContainerRequestProto.getDefaultInstance();
        case 14:
          return org.apache.slider.api.proto.Messages.GetLiveComponentsRequestProto.getDefaultInstance();
        case 15:
          return org.apache.slider.api.proto.Messages.GetLiveComponentRequestProto.getDefaultInstance();
        case 16:
          return org.apache.slider.api.proto.Messages.GetLiveNodesRequestProto.getDefaultInstance();
        case 17:
          return org.apache.slider.api.proto.Messages.GetLiveNodeRequestProto.getDefaultInstance();
        case 18:
          return org.apache.slider.api.proto.Messages.EmptyPayloadProto.getDefaultInstance();
        case 19:
          return org.apache.slider.api.proto.Messages.EmptyPayloadProto.getDefaultInstance();
        case 20:
          return org.apache.slider.api.proto.Messages.EmptyPayloadProto.getDefaultInstance();
        case 21:
          return org.apache.slider.api.proto.Messages.EmptyPayloadProto.getDefaultInstance();
        case 22:
          return org.apache.slider.api.proto.Messages.EmptyPayloadProto.getDefaultInstance();
        case 23:
          return org.apache.slider.api.proto.Messages.EmptyPayloadProto.getDefaultInstance();
        case 24:
          return org.apache.slider.api.proto.Messages.EmptyPayloadProto.getDefaultInstance();
        case 25:
          return org.apache.slider.api.proto.Messages.GetCertificateStoreRequestProto.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.apache.slider.api.proto.Messages.StopClusterResponseProto.getDefaultInstance();
        case 1:
          return org.apache.slider.api.proto.Messages.UpgradeContainersResponseProto.getDefaultInstance();
        case 2:
          return org.apache.slider.api.proto.Messages.FlexClusterResponseProto.getDefaultInstance();
        case 3:
          return org.apache.slider.api.proto.Messages.GetJSONClusterStatusResponseProto.getDefaultInstance();
        case 4:
          return org.apache.slider.api.proto.Messages.GetInstanceDefinitionResponseProto.getDefaultInstance();
        case 5:
          return org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleResponseProto.getDefaultInstance();
        case 6:
          return org.apache.slider.api.proto.Messages.GetNodeResponseProto.getDefaultInstance();
        case 7:
          return org.apache.slider.api.proto.Messages.GetClusterNodesResponseProto.getDefaultInstance();
        case 8:
          return org.apache.slider.api.proto.Messages.EchoResponseProto.getDefaultInstance();
        case 9:
          return org.apache.slider.api.proto.Messages.KillContainerResponseProto.getDefaultInstance();
        case 10:
          return org.apache.slider.api.proto.Messages.AMSuicideResponseProto.getDefaultInstance();
        case 11:
          return org.apache.slider.api.proto.Messages.ApplicationLivenessInformationProto.getDefaultInstance();
        case 12:
          return org.apache.slider.api.proto.Messages.GetLiveContainersResponseProto.getDefaultInstance();
        case 13:
          return org.apache.slider.api.proto.Messages.ContainerInformationProto.getDefaultInstance();
        case 14:
          return org.apache.slider.api.proto.Messages.GetLiveComponentsResponseProto.getDefaultInstance();
        case 15:
          return org.apache.slider.api.proto.Messages.ComponentInformationProto.getDefaultInstance();
        case 16:
          return org.apache.slider.api.proto.Messages.GetLiveNodesResponseProto.getDefaultInstance();
        case 17:
          return org.apache.slider.api.proto.Messages.NodeInformationProto.getDefaultInstance();
        case 18:
          return org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance();
        case 19:
          return org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance();
        case 20:
          return org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance();
        case 21:
          return org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance();
        case 22:
          return org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance();
        case 23:
          return org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance();
        case 24:
          return org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance();
        case 25:
          return org.apache.slider.api.proto.Messages.GetCertificateStoreResponseProto.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }

    public static final class Stub extends org.apache.slider.api.proto.SliderClusterAPI.SliderClusterProtocolPB implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.RpcChannel channel;

      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }

      public  void stopCluster(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.StopClusterRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.StopClusterResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.apache.slider.api.proto.Messages.StopClusterResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.StopClusterResponseProto.class,
            org.apache.slider.api.proto.Messages.StopClusterResponseProto.getDefaultInstance()));
      }

      public  void upgradeContainers(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.UpgradeContainersRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.UpgradeContainersResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.apache.slider.api.proto.Messages.UpgradeContainersResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.UpgradeContainersResponseProto.class,
            org.apache.slider.api.proto.Messages.UpgradeContainersResponseProto.getDefaultInstance()));
      }

      public  void flexCluster(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.FlexClusterRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.FlexClusterResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.apache.slider.api.proto.Messages.FlexClusterResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.FlexClusterResponseProto.class,
            org.apache.slider.api.proto.Messages.FlexClusterResponseProto.getDefaultInstance()));
      }

      public  void getJSONClusterStatus(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetJSONClusterStatusRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetJSONClusterStatusResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          org.apache.slider.api.proto.Messages.GetJSONClusterStatusResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.GetJSONClusterStatusResponseProto.class,
            org.apache.slider.api.proto.Messages.GetJSONClusterStatusResponseProto.getDefaultInstance()));
      }

      public  void getInstanceDefinition(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetInstanceDefinitionRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetInstanceDefinitionResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          org.apache.slider.api.proto.Messages.GetInstanceDefinitionResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.GetInstanceDefinitionResponseProto.class,
            org.apache.slider.api.proto.Messages.GetInstanceDefinitionResponseProto.getDefaultInstance()));
      }

      public  void listNodeUUIDsByRole(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(5),
          controller,
          request,
          org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleResponseProto.class,
            org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleResponseProto.getDefaultInstance()));
      }

      public  void getNode(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetNodeRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetNodeResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(6),
          controller,
          request,
          org.apache.slider.api.proto.Messages.GetNodeResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.GetNodeResponseProto.class,
            org.apache.slider.api.proto.Messages.GetNodeResponseProto.getDefaultInstance()));
      }

      public  void getClusterNodes(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetClusterNodesRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetClusterNodesResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(7),
          controller,
          request,
          org.apache.slider.api.proto.Messages.GetClusterNodesResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.GetClusterNodesResponseProto.class,
            org.apache.slider.api.proto.Messages.GetClusterNodesResponseProto.getDefaultInstance()));
      }

      public  void echo(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EchoRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.EchoResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(8),
          controller,
          request,
          org.apache.slider.api.proto.Messages.EchoResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.EchoResponseProto.class,
            org.apache.slider.api.proto.Messages.EchoResponseProto.getDefaultInstance()));
      }

      public  void killContainer(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.KillContainerRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.KillContainerResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(9),
          controller,
          request,
          org.apache.slider.api.proto.Messages.KillContainerResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.KillContainerResponseProto.class,
            org.apache.slider.api.proto.Messages.KillContainerResponseProto.getDefaultInstance()));
      }

      public  void amSuicide(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.AMSuicideRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.AMSuicideResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(10),
          controller,
          request,
          org.apache.slider.api.proto.Messages.AMSuicideResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.AMSuicideResponseProto.class,
            org.apache.slider.api.proto.Messages.AMSuicideResponseProto.getDefaultInstance()));
      }

      public  void getLivenessInformation(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetApplicationLivenessRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.ApplicationLivenessInformationProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(11),
          controller,
          request,
          org.apache.slider.api.proto.Messages.ApplicationLivenessInformationProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.ApplicationLivenessInformationProto.class,
            org.apache.slider.api.proto.Messages.ApplicationLivenessInformationProto.getDefaultInstance()));
      }

      public  void getLiveContainers(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveContainersRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetLiveContainersResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(12),
          controller,
          request,
          org.apache.slider.api.proto.Messages.GetLiveContainersResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.GetLiveContainersResponseProto.class,
            org.apache.slider.api.proto.Messages.GetLiveContainersResponseProto.getDefaultInstance()));
      }

      public  void getLiveContainer(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveContainerRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.ContainerInformationProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(13),
          controller,
          request,
          org.apache.slider.api.proto.Messages.ContainerInformationProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.ContainerInformationProto.class,
            org.apache.slider.api.proto.Messages.ContainerInformationProto.getDefaultInstance()));
      }

      public  void getLiveComponents(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveComponentsRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetLiveComponentsResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(14),
          controller,
          request,
          org.apache.slider.api.proto.Messages.GetLiveComponentsResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.GetLiveComponentsResponseProto.class,
            org.apache.slider.api.proto.Messages.GetLiveComponentsResponseProto.getDefaultInstance()));
      }

      public  void getLiveComponent(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveComponentRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.ComponentInformationProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(15),
          controller,
          request,
          org.apache.slider.api.proto.Messages.ComponentInformationProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.ComponentInformationProto.class,
            org.apache.slider.api.proto.Messages.ComponentInformationProto.getDefaultInstance()));
      }

      public  void getLiveNodes(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveNodesRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetLiveNodesResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(16),
          controller,
          request,
          org.apache.slider.api.proto.Messages.GetLiveNodesResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.GetLiveNodesResponseProto.class,
            org.apache.slider.api.proto.Messages.GetLiveNodesResponseProto.getDefaultInstance()));
      }

      public  void getLiveNode(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveNodeRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.NodeInformationProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(17),
          controller,
          request,
          org.apache.slider.api.proto.Messages.NodeInformationProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.NodeInformationProto.class,
            org.apache.slider.api.proto.Messages.NodeInformationProto.getDefaultInstance()));
      }

      public  void getModelDesired(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(18),
          controller,
          request,
          org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.WrappedJsonProto.class,
            org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance()));
      }

      public  void getModelDesiredAppconf(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(19),
          controller,
          request,
          org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.WrappedJsonProto.class,
            org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance()));
      }

      public  void getModelDesiredResources(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(20),
          controller,
          request,
          org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.WrappedJsonProto.class,
            org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance()));
      }

      public  void getModelResolved(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(21),
          controller,
          request,
          org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.WrappedJsonProto.class,
            org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance()));
      }

      public  void getModelResolvedAppconf(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(22),
          controller,
          request,
          org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.WrappedJsonProto.class,
            org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance()));
      }

      public  void getModelResolvedResources(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(23),
          controller,
          request,
          org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.WrappedJsonProto.class,
            org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance()));
      }

      public  void getLiveResources(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.WrappedJsonProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(24),
          controller,
          request,
          org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.WrappedJsonProto.class,
            org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance()));
      }

      public  void getClientCertificateStore(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetCertificateStoreRequestProto request,
          com.google.protobuf.RpcCallback<org.apache.slider.api.proto.Messages.GetCertificateStoreResponseProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(25),
          controller,
          request,
          org.apache.slider.api.proto.Messages.GetCertificateStoreResponseProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.slider.api.proto.Messages.GetCertificateStoreResponseProto.class,
            org.apache.slider.api.proto.Messages.GetCertificateStoreResponseProto.getDefaultInstance()));
      }
    }

    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }

    public interface BlockingInterface {
      public org.apache.slider.api.proto.Messages.StopClusterResponseProto stopCluster(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.StopClusterRequestProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.UpgradeContainersResponseProto upgradeContainers(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.UpgradeContainersRequestProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.FlexClusterResponseProto flexCluster(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.FlexClusterRequestProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.GetJSONClusterStatusResponseProto getJSONClusterStatus(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetJSONClusterStatusRequestProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.GetInstanceDefinitionResponseProto getInstanceDefinition(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetInstanceDefinitionRequestProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleResponseProto listNodeUUIDsByRole(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleRequestProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.GetNodeResponseProto getNode(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetNodeRequestProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.GetClusterNodesResponseProto getClusterNodes(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetClusterNodesRequestProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.EchoResponseProto echo(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EchoRequestProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.KillContainerResponseProto killContainer(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.KillContainerRequestProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.AMSuicideResponseProto amSuicide(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.AMSuicideRequestProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.ApplicationLivenessInformationProto getLivenessInformation(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetApplicationLivenessRequestProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.GetLiveContainersResponseProto getLiveContainers(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveContainersRequestProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.ContainerInformationProto getLiveContainer(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveContainerRequestProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.GetLiveComponentsResponseProto getLiveComponents(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveComponentsRequestProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.ComponentInformationProto getLiveComponent(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveComponentRequestProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.GetLiveNodesResponseProto getLiveNodes(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveNodesRequestProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.NodeInformationProto getLiveNode(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveNodeRequestProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.WrappedJsonProto getModelDesired(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.WrappedJsonProto getModelDesiredAppconf(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.WrappedJsonProto getModelDesiredResources(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.WrappedJsonProto getModelResolved(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.WrappedJsonProto getModelResolvedAppconf(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.WrappedJsonProto getModelResolvedResources(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.WrappedJsonProto getLiveResources(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request)
          throws com.google.protobuf.ServiceException;

      public org.apache.slider.api.proto.Messages.GetCertificateStoreResponseProto getClientCertificateStore(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetCertificateStoreRequestProto request)
          throws com.google.protobuf.ServiceException;
    }

    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.BlockingRpcChannel channel;

      public org.apache.slider.api.proto.Messages.StopClusterResponseProto stopCluster(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.StopClusterRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.StopClusterResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.apache.slider.api.proto.Messages.StopClusterResponseProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.UpgradeContainersResponseProto upgradeContainers(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.UpgradeContainersRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.UpgradeContainersResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.apache.slider.api.proto.Messages.UpgradeContainersResponseProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.FlexClusterResponseProto flexCluster(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.FlexClusterRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.FlexClusterResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.apache.slider.api.proto.Messages.FlexClusterResponseProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.GetJSONClusterStatusResponseProto getJSONClusterStatus(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetJSONClusterStatusRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.GetJSONClusterStatusResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          org.apache.slider.api.proto.Messages.GetJSONClusterStatusResponseProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.GetInstanceDefinitionResponseProto getInstanceDefinition(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetInstanceDefinitionRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.GetInstanceDefinitionResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          org.apache.slider.api.proto.Messages.GetInstanceDefinitionResponseProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleResponseProto listNodeUUIDsByRole(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(5),
          controller,
          request,
          org.apache.slider.api.proto.Messages.ListNodeUUIDsByRoleResponseProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.GetNodeResponseProto getNode(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetNodeRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.GetNodeResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(6),
          controller,
          request,
          org.apache.slider.api.proto.Messages.GetNodeResponseProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.GetClusterNodesResponseProto getClusterNodes(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetClusterNodesRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.GetClusterNodesResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(7),
          controller,
          request,
          org.apache.slider.api.proto.Messages.GetClusterNodesResponseProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.EchoResponseProto echo(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EchoRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.EchoResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(8),
          controller,
          request,
          org.apache.slider.api.proto.Messages.EchoResponseProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.KillContainerResponseProto killContainer(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.KillContainerRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.KillContainerResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(9),
          controller,
          request,
          org.apache.slider.api.proto.Messages.KillContainerResponseProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.AMSuicideResponseProto amSuicide(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.AMSuicideRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.AMSuicideResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(10),
          controller,
          request,
          org.apache.slider.api.proto.Messages.AMSuicideResponseProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.ApplicationLivenessInformationProto getLivenessInformation(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetApplicationLivenessRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.ApplicationLivenessInformationProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(11),
          controller,
          request,
          org.apache.slider.api.proto.Messages.ApplicationLivenessInformationProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.GetLiveContainersResponseProto getLiveContainers(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveContainersRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.GetLiveContainersResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(12),
          controller,
          request,
          org.apache.slider.api.proto.Messages.GetLiveContainersResponseProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.ContainerInformationProto getLiveContainer(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveContainerRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.ContainerInformationProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(13),
          controller,
          request,
          org.apache.slider.api.proto.Messages.ContainerInformationProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.GetLiveComponentsResponseProto getLiveComponents(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveComponentsRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.GetLiveComponentsResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(14),
          controller,
          request,
          org.apache.slider.api.proto.Messages.GetLiveComponentsResponseProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.ComponentInformationProto getLiveComponent(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveComponentRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.ComponentInformationProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(15),
          controller,
          request,
          org.apache.slider.api.proto.Messages.ComponentInformationProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.GetLiveNodesResponseProto getLiveNodes(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveNodesRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.GetLiveNodesResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(16),
          controller,
          request,
          org.apache.slider.api.proto.Messages.GetLiveNodesResponseProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.NodeInformationProto getLiveNode(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetLiveNodeRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.NodeInformationProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(17),
          controller,
          request,
          org.apache.slider.api.proto.Messages.NodeInformationProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.WrappedJsonProto getModelDesired(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.WrappedJsonProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(18),
          controller,
          request,
          org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.WrappedJsonProto getModelDesiredAppconf(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.WrappedJsonProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(19),
          controller,
          request,
          org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.WrappedJsonProto getModelDesiredResources(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.WrappedJsonProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(20),
          controller,
          request,
          org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.WrappedJsonProto getModelResolved(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.WrappedJsonProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(21),
          controller,
          request,
          org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.WrappedJsonProto getModelResolvedAppconf(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.WrappedJsonProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(22),
          controller,
          request,
          org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.WrappedJsonProto getModelResolvedResources(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.WrappedJsonProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(23),
          controller,
          request,
          org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.WrappedJsonProto getLiveResources(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.EmptyPayloadProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.WrappedJsonProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(24),
          controller,
          request,
          org.apache.slider.api.proto.Messages.WrappedJsonProto.getDefaultInstance());
      }


      public org.apache.slider.api.proto.Messages.GetCertificateStoreResponseProto getClientCertificateStore(
          com.google.protobuf.RpcController controller,
          org.apache.slider.api.proto.Messages.GetCertificateStoreRequestProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.slider.api.proto.Messages.GetCertificateStoreResponseProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(25),
          controller,
          request,
          org.apache.slider.api.proto.Messages.GetCertificateStoreResponseProto.getDefaultInstance());
      }

    }

    // @@protoc_insertion_point(class_scope:org.apache.slider.api.SliderClusterProtocolPB)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033SliderClusterProtocol.proto\022\025org.apach" +
      "e.slider.api\032\033SliderClusterMessages.prot" +
      "o2\245\030\n\027SliderClusterProtocolPB\022n\n\013stopClu" +
      "ster\022..org.apache.slider.api.StopCluster" +
      "RequestProto\032/.org.apache.slider.api.Sto" +
      "pClusterResponseProto\022\200\001\n\021upgradeContain" +
      "ers\0224.org.apache.slider.api.UpgradeConta" +
      "inersRequestProto\0325.org.apache.slider.ap" +
      "i.UpgradeContainersResponseProto\022n\n\013flex" +
      "Cluster\022..org.apache.slider.api.FlexClus",
      "terRequestProto\032/.org.apache.slider.api." +
      "FlexClusterResponseProto\022\211\001\n\024getJSONClus" +
      "terStatus\0227.org.apache.slider.api.GetJSO" +
      "NClusterStatusRequestProto\0328.org.apache." +
      "slider.api.GetJSONClusterStatusResponseP" +
      "roto\022\214\001\n\025getInstanceDefinition\0228.org.apa" +
      "che.slider.api.GetInstanceDefinitionRequ" +
      "estProto\0329.org.apache.slider.api.GetInst" +
      "anceDefinitionResponseProto\022\206\001\n\023listNode" +
      "UUIDsByRole\0226.org.apache.slider.api.List",
      "NodeUUIDsByRoleRequestProto\0327.org.apache" +
      ".slider.api.ListNodeUUIDsByRoleResponseP" +
      "roto\022b\n\007getNode\022*.org.apache.slider.api." +
      "GetNodeRequestProto\032+.org.apache.slider." +
      "api.GetNodeResponseProto\022z\n\017getClusterNo" +
      "des\0222.org.apache.slider.api.GetClusterNo" +
      "desRequestProto\0323.org.apache.slider.api." +
      "GetClusterNodesResponseProto\022Y\n\004echo\022\'.o" +
      "rg.apache.slider.api.EchoRequestProto\032(." +
      "org.apache.slider.api.EchoResponseProto\022",
      "t\n\rkillContainer\0220.org.apache.slider.api" +
      ".KillContainerRequestProto\0321.org.apache." +
      "slider.api.KillContainerResponseProto\022h\n" +
      "\tamSuicide\022,.org.apache.slider.api.AMSui" +
      "cideRequestProto\032-.org.apache.slider.api" +
      ".AMSuicideResponseProto\022\217\001\n\026getLivenessI" +
      "nformation\0229.org.apache.slider.api.GetAp" +
      "plicationLivenessRequestProto\032:.org.apac" +
      "he.slider.api.ApplicationLivenessInforma" +
      "tionProto\022\200\001\n\021getLiveContainers\0224.org.ap",
      "ache.slider.api.GetLiveContainersRequest" +
      "Proto\0325.org.apache.slider.api.GetLiveCon" +
      "tainersResponseProto\022y\n\020getLiveContainer" +
      "\0223.org.apache.slider.api.GetLiveContaine" +
      "rRequestProto\0320.org.apache.slider.api.Co" +
      "ntainerInformationProto\022\200\001\n\021getLiveCompo" +
      "nents\0224.org.apache.slider.api.GetLiveCom" +
      "ponentsRequestProto\0325.org.apache.slider." +
      "api.GetLiveComponentsResponseProto\022y\n\020ge" +
      "tLiveComponent\0223.org.apache.slider.api.G",
      "etLiveComponentRequestProto\0320.org.apache" +
      ".slider.api.ComponentInformationProto\022q\n" +
      "\014getLiveNodes\022/.org.apache.slider.api.Ge" +
      "tLiveNodesRequestProto\0320.org.apache.slid" +
      "er.api.GetLiveNodesResponseProto\022j\n\013getL" +
      "iveNode\022..org.apache.slider.api.GetLiveN" +
      "odeRequestProto\032+.org.apache.slider.api." +
      "NodeInformationProto\022d\n\017getModelDesired\022" +
      "(.org.apache.slider.api.EmptyPayloadProt" +
      "o\032\'.org.apache.slider.api.WrappedJsonPro",
      "to\022k\n\026getModelDesiredAppconf\022(.org.apach" +
      "e.slider.api.EmptyPayloadProto\032\'.org.apa" +
      "che.slider.api.WrappedJsonProto\022m\n\030getMo" +
      "delDesiredResources\022(.org.apache.slider." +
      "api.EmptyPayloadProto\032\'.org.apache.slide" +
      "r.api.WrappedJsonProto\022e\n\020getModelResolv" +
      "ed\022(.org.apache.slider.api.EmptyPayloadP" +
      "roto\032\'.org.apache.slider.api.WrappedJson" +
      "Proto\022l\n\027getModelResolvedAppconf\022(.org.a" +
      "pache.slider.api.EmptyPayloadProto\032\'.org",
      ".apache.slider.api.WrappedJsonProto\022n\n\031g" +
      "etModelResolvedResources\022(.org.apache.sl" +
      "ider.api.EmptyPayloadProto\032\'.org.apache." +
      "slider.api.WrappedJsonProto\022e\n\020getLiveRe" +
      "sources\022(.org.apache.slider.api.EmptyPay" +
      "loadProto\032\'.org.apache.slider.api.Wrappe" +
      "dJsonProto\022\214\001\n\031getClientCertificateStore" +
      "\0226.org.apache.slider.api.GetCertificateS" +
      "toreRequestProto\0327.org.apache.slider.api" +
      ".GetCertificateStoreResponseProtoB5\n\033org",
      ".apache.slider.api.protoB\020SliderClusterA" +
      "PI\210\001\001\240\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.apache.slider.api.proto.Messages.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
